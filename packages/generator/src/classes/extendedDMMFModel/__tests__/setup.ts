import type DMMF from "@prisma/dmmf";

import type { GeneratorConfig } from "../../../schemas";
import { ExtendedDMMFFieldClass } from "../../extendedDMMFField";

export const DEFAULT_GENERATOR_CONFIG: GeneratorConfig = {
	useMultipleFiles: false,
	createInputTypes: true,
	createModelTypes: true,
	createOptionalDefaultValuesTypes: false,
	createRelationValuesTypes: false,
	createPartialTypes: false,
	addIncludeType: true,
	addSelectType: true,
	addInputTypeValidation: true,
	useDefaultValidators: true,
	prismaClientPath: "@prisma/client",
	coerceDate: true,
	writeNullishInModelTypes: false,
	isMongoDb: false,
	validateWhereUniqueInput: false,
	inputTypePath: "inputTypeSchemas",
	outputTypePath: "outputTypeSchemas",
	writeBarrelFiles: true,
	decimalJSInstalled: true,
	useTypeAssertions: false,
};

export const MODEL_BASE: DMMF.Model = {
	name: "User",
	dbName: null,
	fields: [
		new ExtendedDMMFFieldClass(
			{
				name: "id",
				kind: "scalar",
				isList: false,
				isRequired: true,
				isUnique: false,
				isId: true,
				isReadOnly: false,
				hasDefaultValue: true,
				type: "Int",
				default: {
					name: "autoincrement",
					args: [],
				},
				isGenerated: false,
				isUpdatedAt: false,
			},
			DEFAULT_GENERATOR_CONFIG,
			"User",
		),
		new ExtendedDMMFFieldClass(
			{
				name: "email",
				kind: "scalar",
				isList: false,
				isRequired: true,
				isUnique: true,
				isId: false,
				isReadOnly: false,
				hasDefaultValue: false,
				type: "String",
				isGenerated: false,
				isUpdatedAt: false,
			},
			DEFAULT_GENERATOR_CONFIG,
			"User",
		),
	],
	primaryKey: null,
	uniqueFields: [],
	uniqueIndexes: [],
	isGenerated: false,
};

export const MODEL_WITH_AUTO_IMPORT_FILDS: DMMF.Model = {
	name: "User",
	dbName: null,
	fields: [
		{
			name: "id",
			kind: "scalar",
			isList: false,
			isRequired: true,
			isUnique: false,
			isId: true,
			isReadOnly: false,
			hasDefaultValue: true,
			type: "Decimal",
			default: {
				name: "autoincrement",
				args: [],
			},
			isGenerated: false,
			isUpdatedAt: false,
		},
		// Json
		{
			name: "json",
			kind: "scalar",
			isList: false,
			isRequired: true,
			isUnique: false,
			isId: false,
			isReadOnly: false,
			hasDefaultValue: false,
			type: "Json",
			isGenerated: false,
			isUpdatedAt: false,
		},
		// optional Json
		{
			name: "optionalJson",
			kind: "scalar",
			isList: false,
			isRequired: false,
			isUnique: false,
			isId: false,
			isReadOnly: false,
			hasDefaultValue: false,
			type: "Json",
			isGenerated: false,
			isUpdatedAt: false,
		},
		// enum
		{
			name: "enum",
			kind: "enum",
			isList: false,
			isRequired: true,
			isUnique: false,
			isId: false,
			isReadOnly: false,
			hasDefaultValue: false,
			type: "Role",
			isGenerated: false,
			isUpdatedAt: false,
		},
	],
	primaryKey: null,
	uniqueFields: [],
	uniqueIndexes: [],
	isGenerated: false,
};

export const FIELD_BASE: DMMF.Field = {
	kind: "scalar",
	name: "test",
	isRequired: true,
	isList: false,
	isUnique: false,
	isId: false,
	isReadOnly: false,
	type: "String",
	// dbNames: ['test'],
	isGenerated: false,
	isUpdatedAt: false,
	hasDefaultValue: false,
	default: undefined,
	relationToFields: undefined,
	relationOnDelete: undefined,
	relationName: undefined,
	documentation: undefined,
};
